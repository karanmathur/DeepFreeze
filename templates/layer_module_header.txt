module MODULE_NAME (
    input logic clk,
    input logic rstn,
    input logic valid,
    input logic [NUM_INPUT_FMAPS*INPUT_ACT_NBITS-1:0] input_act,
    output logic [OUTPUT_ACT_NBITS-1:0] output_act,
    output logic ready
);
logic we;
logic [8:0] zero_number; 
assign zero_number = 9'd0; 
logic [NUM_INPUT_FMAPS*INPUT_ACT_NBITS-1:0] input_act_ff;
genvar i;
generate
for (i=0;i<NUM_INPUT_FMAPS;i++)
    begin
        always_ff @(posedge clk) begin
            if (rstn == 0) begin
                input_act_ff[(i+1)*INPUT_ACT_NBITS-1:i*INPUT_ACT_NBITS] <= '0;
            end
            else begin
                input_act_ff[(i+1)*INPUT_ACT_NBITS-1:i*INPUT_ACT_NBITS] <= input_act[(i+1)*INPUT_ACT_NBITS-1:i*INPUT_ACT_NBITS];
            end
        end
    end
endgenerate
